syntax = "proto3";
import "google/protobuf/timestamp.proto";

service EthereumTransactions {}

message Block {
    BlockHeader header = 1;
    repeated Transaction transactions = 2;
    repeated Log logs = 3;
    repeated Receipt receipts = 4;
}

message BlockHeader {
  bytes parent_hash = 1;
  bytes uncle_hash = 2; 
  bytes miner = 3;
  bytes state_root = 4; 
  bytes transactions_root = 5; 
  bytes receipt_root = 6;
  bytes logs_bloom = 7;
  BigInt difficulty = 8;
  uint64 number = 9;
  uint64 gas_limit = 10;
  uint64 gas_used = 11;
  google.protobuf.Timestamp timestamp = 12;
  bytes extra_data = 13;
  bytes mix_hash = 14;  
  bytes nonce = 15;
  bytes hash = 16;
  bytes base_fee_per_gas = 17;
  bytes rlp = 18;
}


message Transaction {
  bytes to = 1;
  uint64 nonce = 2;
  BigInt gas_price = 3;
  uint64 gas_limit = 4;
  BigInt value = 5;
  bytes input = 6;
  bytes v = 7; 
  bytes r = 8;
  bytes s = 9;
  bytes hash = 21;
  bytes from = 22;
  uint64 block_number = 23;
  bytes block_hash = 24;
  optional bytes rlp = 25;
  optional Proof merkle_proof = 26; 
}

message Proof {
    bytes proof = 1;
}

message BigInt {
  bytes value = 1;
}

message Log {
    bytes address = 1;
    repeated bytes topics = 2;
    bytes data = 3;
    uint32 index = 4;
    uint32 block_index = 5;
    bytes block_hash = 6;
    uint32 transaction_index = 7;
    bytes transaction_hash = 8;
    optional bytes rlp = 9;
}

message Receipt {
  bytes to = 1;
  bytes from = 5;
  uint32 transaction_index = 6;
  bool status = 7;
  bytes contract_address = 8;
  uint64 gas_used = 9;
  uint64 cumulative_gas_used = 2;
  bytes logs_bloom = 3;
  repeated Log logs = 4;
  optional bytes rlp = 10;
  optional Proof merkle_proof = 11;
}

